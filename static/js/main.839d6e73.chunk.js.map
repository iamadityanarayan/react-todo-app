{"version":3,"sources":["components/Form.js","components/Todo.js","components/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["Form","setInputText","todos","setTodos","inputText","setStatus","value","onChange","event","console","log","target","className","type","onClick","preventDefault","text","completed","id","Math","random","name","Todo","todo","map","item","filter","element","TodoList","filteredTodos","App","useState","status","setFilteredTodos","useEffect","getToLocalTodos","filterHandlder","saveToLocalTodos","localStorage","setItem","JSON","stringify","getItem","localTodos","parse","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.839d6e73.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\n// Simplified Props ({ setInputTextProps })\r\nconst Form = ({ setInputText, todos, setTodos, inputText, setStatus }) => {\r\n  // Here I can write javascript code and function\r\n\r\n  const inputTextHandler = (event) => {\r\n    console.log(event.target.value);\r\n    setInputText(event.target.value);\r\n  };\r\n\r\n  const submitTodoHandler = (event) => {\r\n    event.preventDefault(); //stop refresh page\r\n    setTodos([\r\n      ...todos,\r\n      { text: inputText, completed: false, id: Math.random() * 100 },\r\n    ]);\r\n    setInputText(\"\"); // set State back to 0 || Updating the State to initial\r\n  };\r\n\r\n  const statusHandler = (event) => {\r\n    console.log(\"Status Handler\");\r\n    // console.log(event.target.value);\r\n    setStatus(event.target.value);\r\n    // todos.filter((items) => event.target.value === items.completed);\r\n  };\r\n\r\n  return (\r\n    <form>\r\n      <input\r\n        value={inputText}\r\n        onChange={inputTextHandler}\r\n        className=\"todo-input\"\r\n        type=\"text\"\r\n      />\r\n      <button onClick={submitTodoHandler} className=\"todo-button\" type=\"submit\">\r\n        <i className=\"fas fa-plus-square\"></i>\r\n      </button>\r\n      <div className=\"select\">\r\n        <select onChange={statusHandler} name=\"todos\" className=\"filter-todo\">\r\n          <option value=\"all\">All</option>\r\n          <option value=\"completed\">Completed</option>\r\n          <option value=\"uncompleted\">UnCompleted</option>\r\n        </select>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import React from 'react';\r\n//Import Components\r\n// import TodoList from './TodoList';\r\n\r\nconst Todo = ({ text, todo, todos, setTodos }) => {\r\n\r\n    // Events\r\n    const deleteHandler = () => {\r\n        // console.log('delete');\r\n        setTodos(todos.filter((element) => element.id !== todo.id))\r\n    }\r\n\r\n    const completeHandler = () =>{\r\n        console.log('comp');\r\n        setTodos(todos.map( item => {\r\n            if(item.id === todo.id){\r\n                // console.log(...item);\r\n                return {\r\n                    ...item, completed: !item.completed\r\n                };\r\n            }\r\n            return item;\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <div className='todo'>\r\n            <li className={`todo-item ${todo.completed ? 'completed' : ''}`}>{text}</li>\r\n            <button onClick={completeHandler} className='complete-btn'>\r\n                <i className='fas fa-check complete-btn'></i>\r\n            </button>\r\n            <button onClick={deleteHandler} className='trash-btn'>\r\n                <i className='fas fa-trash trash-btn'></i>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Todo;","import React from 'react';\r\n//Import Components\r\nimport Todo from './Todo';\r\n\r\nconst TodoList = ({ todos, setTodos, filteredTodos }) => {\r\n    return (\r\n        <div className='todo-container'>\r\n            <ul className='todo-list'>\r\n                {\r\n                    filteredTodos.map( todo => (\r\n                        <Todo \r\n                        setTodos={setTodos}\r\n                        todos={todos}\r\n                        text={todo.text}\r\n                        todo={todo}\r\n                        key={todo.id} />\r\n                    ))\r\n                }\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoList;","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\n\n// Importing Components...\nimport Form from \"./components/Form\";\nimport TodoList from \"./components/TodoList\";\n\nfunction App() {\n  // Here I can write react based code...\n\n  // States Stuff\n  const [inputText, setInputText] = useState(\"\");\n  const [todos, setTodos] = useState([]);\n  const [status, setStatus] = useState(\"all\");\n  const [filteredTodos, setFilteredTodos] = useState([]);\n\n  // USE EFFECT :- RUN ONCE when app starts\n  useEffect(() => {\n    getToLocalTodos();\n  }, []);\n\n  // USE EFFECT\n  useEffect(() => {\n    filterHandlder();\n    saveToLocalTodos();\n  }, [todos, status]);\n\n  // Functions\n  const filterHandlder = () => {\n    switch (status) {\n      case \"completed\":\n        setFilteredTodos(todos.filter((todo) => todo.completed === true));\n        break;\n      case \"uncompleted\":\n        setFilteredTodos(todos.filter((todo) => todo.completed === false));\n        break;\n\n      default:\n        setFilteredTodos(todos);\n        break;\n    }\n  };\n\n  // Save To Local Storage\n  const saveToLocalTodos = () => {\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\n  };\n\n  // Get from Local Storage\n  const getToLocalTodos = () => {\n    if (localStorage.getItem(\"todos\") === null) {\n      localStorage.setItem(\"todos\", JSON.stringify([]));\n    } else {\n      let localTodos = JSON.parse(localStorage.getItem('todos'));\n      setTodos(localTodos);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>Aditya's Todo List</h1>\n      </header>\n      <Form\n        inputText={inputText}\n        todos={todos}\n        setTodos={setTodos}\n        setInputText={setInputText}\n        setStatus={setStatus}\n      />\n      <TodoList\n        filteredTodos={filteredTodos}\n        setTodos={setTodos}\n        todos={todos}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}